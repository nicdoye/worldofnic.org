image: publysher/hugo

.deploy-template: &deploy-template
  type: deploy
  before_script:
  - apt-get update
  - apt-get -qq install python-software-properties curl
  - curl -sL https://deb.nodesource.com/setup_7.x | bash -
  - apt-get install nodejs
  - apt-get install -y build-essential
  artifacts:
    paths:
    - public


cache:
  paths:
    - node_modules/

# Test Build
test:
  script:
  - hugo
  artifacts:
    paths:
    - public
  environment:
    name: test

# deploy_to_staging
staging:
  <<: *deploy-template
  stage: deploy
  script:
  - hugo
  - npm install -g firebase-tools
  - npm install
  - firebase use --token $FIREBASE_TOKEN staging
  - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_TOKEN
  only:
  - develop
  environment: 
    name: staging
    url: https://staging.worldofnic.org

# deploy_to_production
production:
  <<: *deploy-template
  stage: deploy
  script:
  - hugo
  - npm install -g firebase-tools
  - npm install
  - firebase use --token $FIREBASE_TOKEN production
  - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_TOKEN
  only:
  - master
  environment: 
    name: production-was
    url: https://worldofnic.org


deploy_production:
  environment: production
  # image: publysher/hugo
  # image: python:3.7.0a2-stretch
  image: debian:buster
  script:
  - apt-get update
  - apt-get install python-pip
  - apt-get install hugo
  - hugo
  # - apt-get install python-pip
  - cat  /etc/debian_version /etc/debian_release
  # - apt-get install python
  - pip install awscli
  - aws s3 cp ./ s3://$S3_BUCKET_NAME/ --recursive --exclude "*" --include "*.css" --include "*.html" --include "*.ico" --include "*.jpg" --include "*.png" --include "*.txt"
  only:
  - master

